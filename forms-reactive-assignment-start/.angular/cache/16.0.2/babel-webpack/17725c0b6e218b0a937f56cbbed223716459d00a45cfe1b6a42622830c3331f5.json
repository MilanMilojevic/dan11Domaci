{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport var AppComponent = /** @class */function () {\n  function AppComponent() {}\n  // Function to validate the project name\n  AppComponent.prototype.projectNameValidator = function (control) {\n    if (control.value.toLowerCase() === 'test') {\n      return {\n        invalidProjectName: true\n      };\n    }\n    return null;\n  };\n  // Function to validate the email\n  AppComponent.prototype.emailValidator = function (control) {\n    // Regular expression for email validation\n    var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(control.value)) {\n      return {\n        invalidEmail: true\n      };\n    }\n    return null;\n  };\n  // Async function to simulate an async validator\n  AppComponent.prototype.asyncValidator = function (control) {\n    return new Promise(function (resolve) {\n      setTimeout(function () {\n        if (control.value.toLowerCase() === 'test') {\n          resolve({\n            invalidProjectName: true\n          });\n        } else {\n          resolve(null);\n        }\n      }, 2000); // Simulate async delay of 2 seconds\n    });\n  };\n  // Form submission handler\n  AppComponent.prototype.onSubmit = function (form) {\n    // Get form controls\n    var projectNameControl = form.controls['projectName'];\n    var emailControl = form.controls['email'];\n    var projectStatusControl = form.controls['projectStatus'];\n    // Perform validation\n    var projectNameValidationResult = this.projectNameValidator(projectNameControl);\n    var emailValidationResult = this.emailValidator(emailControl);\n    if (projectNameValidationResult) {\n      console.log('Invalid project name');\n      console.log(projectNameValidationResult);\n      return;\n    }\n    if (emailValidationResult) {\n      console.log('Invalid email');\n      console.log(emailValidationResult);\n      return;\n    }\n    // Perform async validation\n    this.asyncValidator(projectNameControl).then(function (asyncValidationResult) {\n      if (asyncValidationResult) {\n        console.log('Async validation failed');\n        console.log(asyncValidationResult);\n      } else {\n        // Form is valid, print values to console\n        console.log('Form submitted successfully');\n        console.log('Project Name:', projectNameControl.value);\n        console.log('Email:', emailControl.value);\n        console.log('Project Status:', projectStatusControl.value);\n      }\n    });\n  };\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 24,\n    vars: 0,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\", \"col-sm-10\", \"col-md-8\", \"col-sm-offset-1\", \"col-md-offset-2\"], [\"id\", \"projectForm\"], [1, \"form-group\"], [\"for\", \"projectName\"], [\"type\", \"text\", \"id\", \"projectName\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"projectStatus\"], [\"id\", \"projectStatus\", 1, \"form-control\"], [\"value\", \"Stable\"], [\"value\", \"Critical\"], [\"value\", \"Finished\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3)(4, \"div\", 4)(5, \"label\", 5);\n        i0.ɵɵtext(6, \"Project Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 9);\n        i0.ɵɵtext(14, \"Project Status:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"select\", 10)(16, \"option\", 11);\n        i0.ɵɵtext(17, \"Stable\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 12);\n        i0.ɵɵtext(19, \"Critical\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"option\", 13);\n        i0.ɵɵtext(21, \"Finished\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"button\", 14);\n        i0.ɵɵtext(23, \"Submit\");\n        i0.ɵɵelementEnd()()()()();\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.NgControlStatusGroup, i1.NgForm],\n    styles: [\".container[_ngcontent-%COMP%]{margin-top:30px}\"]\n  });\n  return AppComponent;\n}();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}